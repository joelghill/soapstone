services:
  # PostgreSQL database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: soapstone_postgres_prod
    environment:
      POSTGRES_DB: ${DB_NAME:-soapstone}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - soapstone_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Soapstone application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: soapstone_app_prod
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: ${PORT:-3000}
      PUBLIC_URL: ${PUBLIC_URL}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-soapstone}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      COOKIE_SECRET: ${COOKIE_SECRET}
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - soapstone_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:${PORT:-3000}/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx reverse proxy (optional, for SSL termination and load balancing)
  nginx:
    image: nginx:alpine
    container_name: soapstone_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - soapstone_network
    profiles:
      - nginx

volumes:
  postgres_prod_data:
    driver: local

networks:
  soapstone_network:
    driver: bridge
